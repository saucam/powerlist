name: Powerlist-CI

on:
  push:
    branches: [ '*' ]
  pull_request:
    branches: [ main ]

defaults: { run: { shell: bash } }

jobs:
  powerlist-test:
    name: Test with Stack
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macOS-latest]
        resolver: [lts-16, lts-18] #, nightly]
        include:
          - resolver: lts-16
            ghc: 8.8.4
            stack-yaml: stack.yaml
          - resolver: lts-18
            ghc: 8.10.7
          # - resolver: nightly # reports a problem with happy?!
          #   ghc: 9.0.1
        exclude:

    env:
      STACK_YAML: stack.yaml
      STACK_ARGS: '--resolver ${{ matrix.resolver }} --system-ghc'
      cache-version: v6 # bump up this version to invalidate currently stored cache
    steps:
    - uses: actions/checkout@v2
    - uses: haskell/actions/setup@v1
      id: setup-haskell-cabal
      name: Setup Haskell
      with:
        ghc-version: ${{ matrix.ghc }}
        enable-stack: true
        stack-version: 'latest'
        cabal-version: '3.6'

    - name: Cache
      id: cache
      uses: actions/cache@v2
      with:
        path: |
          ${{ steps.setup-haskell-cabal.outputs.stack-root }}
          .stack-work
          powerlist/.stack-work
          powerlist-test/.stack-work
        key: ${{ runner.os }}-${{ matrix.resolver }}-${{ env.cache-version }}
        restore-keys: |
          ${{ runner.os }}-${{ matrix.resolver }}-${{ env.cache-version }}
    - name: Build
      env:
        COVERALLS_TOKEN: ${{ secrets.COVERALLS_TOKEN }}
      run: |
        set -ex
        [ -n "${{ matrix.stack-yaml }}" ] && STACK_YAML=${{ matrix.stack-yaml }}
        curl -sSL https://raw.githubusercontent.com/lehins/utils/5d9b17f2f084ce54978dbd71974970483063a540/haskell/git-modtime/git-modtime.hs -o git-modtime.hs
        mkdir -p .stack-work
        # Windows is confused about stack's default user directory
        stack $STACK_ARGS runghc -- git-modtime.hs -f .stack-work/tree-contents.txt
        if [ "${{ matrix.os }}.${{ matrix.resolver }}" == "ubuntu-latest.lts-14" ] && [ -n "${COVERALLS_TOKEN}" ]; then
          stack $STACK_ARGS build powerlist-test:tests --coverage --test --no-run-tests --haddock --no-haddock-deps
        else
          stack $STACK_ARGS build --test --no-run-tests --haddock --no-haddock-deps
        fi
    - name: Test
      env:
        COVERALLS_TOKEN: ${{ secrets.COVERALLS_TOKEN }}
      run: |
        set -ex
        [ -n "${{ matrix.stack-yaml }}" ] && STACK_YAML=${{ matrix.stack-yaml }}
        if [ "${{ matrix.os }}.${{ matrix.resolver }}" == "ubuntu-latest.lts-14" ] && [ -n "${COVERALLS_TOKEN}" ]; then
          stack $STACK_ARGS test powerlist-test:tests --coverage --haddock --no-haddock-deps
          stack $STACK_ARGS hpc report --all
          curl -L https://github.com/rubik/stack-hpc-coveralls/releases/download/v0.0.6.1/shc-linux-x64-8.8.4.tar.bz2 | tar xj shc
          ./shc --repo-token="$COVERALLS_TOKEN" --partial-coverage --fetch-coverage combined custom
        else
          stack $STACK_ARGS test powerlist-test:tests
        fi
 
